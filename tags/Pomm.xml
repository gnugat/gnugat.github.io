<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[Loïc Faugeron]]></title>
    <link href="/feed/atom.xml" rel="self"/>
    <link href="/"/>
    <updated>2025-08-13T06:56:38+01:00</updated>
    <id>http://gnugat.github.com</id>
            <author>
            <name><![CDATA[Loïc Faugeron]]></name>            <email><![CDATA[faugeron.loic@gmail.com]]></email>        </author>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[Pomm Foundation]]></title>
            <link href="/2015/08/06/pomm-foundation.html"/>
            <updated>2015-08-06T00:00:00+01:00</updated>
            <id>/2015/08/06/pomm-foundation.html</id>
            <content type="html"><![CDATA[<p><a href="http://www.pomm-project.org/">Pomm</a> is an interresting alternative to Doctrine
(<a href="http://docs.doctrine-project.org/projects/doctrine-dbal/en/latest/reference/introduction.html">DBAL</a>
or <a href="http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/tutorials/getting-started.html">ORM</a>), it specializes in one database vendor: <a href="http://www.postgresql.org/docs/9.4/static/intro-whatis.html">PostgreSQL</a>.</p>

<p>In this article we'll quickly have a look at <a href="https://github.com/pomm-project/Foundation#foundation">Pomm Foundation</a>.</p>

<h2 id="installation">Installation</h2>

<p>Pomm can be installed using <a href="https://getcomposer.org/download/">Composer</a>:</p>

<pre><code>composer require pomm-project/foundation:^2.0@rc
</code></pre>

<p>Then we need to create a <code>QueryManager</code>:</p>

<pre><code class="php">&lt;?php

require __DIR__.'/vendor/autoload.php';

$pomm = new PommProject\Foundation\Pomm(
    'database_name' =&gt; array(
        'dsn' =&gt; 'pgsql://database_user:database_pass@database_host:database_port/database_name',
        'class:session_builder' =&gt; '\PommProject\Foundation\SessionBuilder',
    ),
);

/**
 * @var PommProject\Foundation\QueryManager\QueryManagerInterface
 */
$queryManager = $pomm-&gt;getDefaultSession()-&gt;getQueryManager();
</code></pre>

<h2 id="usage">Usage</h2>

<p>The <code>QueryManager</code> allows us to send query to our database:</p>

<pre><code class="php">$items = $queryManager-&gt;query('SELECT * FROM item WHERE name = $1 AND description = $2', array(
    'Arthur Dent',
    'Nobody expects the Spanish Inquisition!',
));
</code></pre>

<blockquote>
  <p><strong>Note</strong>: <a href="https://twitter.com/mvrhov/status/573098943321653248">Named parameters are not supported</a>.</p>
</blockquote>

<p>The returned value is an iterator, each element is a row (an associative array):</p>

<pre><code class="php">foreach ($items as $item) {
    echo $item['description'];
}
</code></pre>

<p>If you'd rather get all elements as an array, you can use <code>iterator_to_array</code>:</p>

<pre><code class="php">$arrayItems = iterator_to_array($items);
</code></pre>

<blockquote>
  <p><strong>Note</strong>: Behind the scene the result is stored in a <code>resource</code>, which is usually more efficient than a PHP array.
  The iterator allows to get the rows from the <code>resource</code> one by one, which can save memory.</p>
</blockquote>

<h2 id="conclusion">Conclusion</h2>

<p>Pomm Foundation provides an efficient abstraction over <code>pg_*</code> functions.</p>

<p>In comparison Doctrine DBAL uses <code>PDO</code> and tries to abstract vendor features,
so if you're using PostgresSQL and don't need an ORM, you can give it a try!</p>
]]></content>
        </entry>
    </feed>